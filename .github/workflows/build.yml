name: Build by matrix
on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: |
        0 0 * * 1
jobs:
  ubuntu:
    name: Build on ${{matrix.container }}
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    strategy:
      matrix:
        container: ['ubuntu:jammy', 'ubuntu:noble']
    steps:
    - uses: actions/checkout@v4
    - name: Install packages
      run: |
        apt update -qq
        apt install -qqy build-essential libcurl4-openssl-dev libjansson-dev linux-libc-dev libtool autoconf git bzip2 clang-format
        apt install -qqy glibc-source gcc make libcurl4-gnutls-dev unzip debhelper dh-make devscripts cdbs clang libcriterion-dev
    - name: Add octopass user
      run: |
        useradd -m -s /bin/bash octopass
        echo "LOGNAME=octopass" >> $GITHUB_ENV
        echo "USER=octopass" >> $GITHUB_ENV
    - name: Build and Install
      run: |
        make build install
        make deb
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: octopass-${{ github.job }}
        path: builds/**
  debian:
    name: Build on ${{matrix.container }}
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    strategy:
      matrix:
        container: ['debian:buster', 'debian:bullseye']
    steps:
    - uses: actions/checkout@v4
    - name: Install packages
      run: |
        apt-get update -qq
        apt-get install -qqy glibc-source gcc make libcurl4-gnutls-dev libjansson-dev bzip2 unzip debhelper dh-make devscripts cdbs clang apt-utils
    - name: Set LOGNAME and USER to environment
      run: |
        echo "LOGNAME=root" >> $GITHUB_ENV
        echo "USER=root" >> $GITHUB_ENV
    - name: Build and Install
      run: |
        make build install
        make deb
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: octopass-${{ github.job }}
        path: builds/**
#  centos:
#    name: Build on ${{matrix.container }}
#    runs-on: ubuntu-latest
#    container: ${{ matrix.container }}
#    strategy:
#      matrix:
#        container: ['centos:7']
#    steps:
#    - uses: actions/checkout@v2
#    - name: Install packages
#      run: |
#        grep "8." /etc/centos-release && \
#          sed -i -e 's/^mirrorlist/#mirrorlist/g' -e 's/^#baseurl=http:\/\/mirror/baseurl=http:\/\/vault/g' /etc/yum.repos.d/CentOS-*repo
#        yum install -y gcc make libcurl-devel jansson-devel bzip2 unzip rpmdevtools epel-release selinux-policy-devel
#    - name: Build and Install
#      run: |
#        make build install
